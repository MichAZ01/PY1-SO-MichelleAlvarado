/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Color;
import javax.swing.UIManager;
/**
 *
 * @author Michelle Alvarado
 */
public class MiniPC extends javax.swing.JFrame {

    /**
     * Creates new form MiniPC
     */
    public MiniPC() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainContainerPanel = new keeptoo.KGradientPanel();
        menuContainer = new javax.swing.JPanel();
        loadProgramsButtonTab = new rojerusan.RSButtonIconI();
        ExecuteButtonTab = new rojerusan.RSButtonIconI();
        StatisticsButtonTab = new rojerusan.RSButtonIconI();
        myMiniPCIcon = new rojerusan.RSPanelImage();
        sliderPanelContainer = new rojerusan.RSPanelsSlider();
        panelLoadPrograms = new keeptoo.KGradientPanel();
        loadProgramsHeader = new javax.swing.JPanel();
        openFilesButton = new javax.swing.JButton();
        mainMemoryLabel = new javax.swing.JLabel();
        SecondaryMemoryLabel = new javax.swing.JLabel();
        mainMemoryScrollPane = new javax.swing.JScrollPane();
        mainMemoryTable = new javax.swing.JTable();
        SecondaryMemoryScrollPane1 = new javax.swing.JScrollPane();
        SecondaryMemoryTable = new javax.swing.JTable();
        loadedFilesLabel = new javax.swing.JLabel();
        loadedFilesScrollPane = new javax.swing.JScrollPane();
        loadedFilesTable = new javax.swing.JTable();
        saveProgramsButton = new javax.swing.JButton();
        panelExecute = new keeptoo.KGradientPanel();
        processesContainer = new javax.swing.JPanel();
        ProcessesScrollPane = new javax.swing.JScrollPane();
        processesTable = new javax.swing.JTable();
        startButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        screenScrollPane = new javax.swing.JScrollPane();
        screenIOPanel = new javax.swing.JPanel();
        keyboardScrollPane = new javax.swing.JScrollPane();
        keyboard = new javax.swing.JTextField();
        core1TabbedPane = new javax.swing.JTabbedPane();
        core1Panel = new javax.swing.JPanel();
        processCore1Label = new java.awt.Label();
        IRRegisterCore1Label = new java.awt.Label();
        IRRegisterCore1Value = new java.awt.Label();
        processCore1IDValue = new java.awt.Label();
        core2TabbedPane = new javax.swing.JTabbedPane();
        core2Panel = new javax.swing.JPanel();
        processCore2Label = new java.awt.Label();
        IRRegisterCore2Label = new java.awt.Label();
        processCore2IDValue = new java.awt.Label();
        IRRegisterCore2Value = new java.awt.Label();
        BCP1ScrollPane = new javax.swing.JScrollPane();
        panelBCP1 = new javax.swing.JPanel();
        idProcessBCP1Label = new java.awt.Label();
        BCPprocessCore1Label = new java.awt.Label();
        stateBCP1Label = new java.awt.Label();
        pcRegisterBCP1Label = new java.awt.Label();
        acRegisterBCP1Label = new java.awt.Label();
        axRegisterBCP1Label = new java.awt.Label();
        bxRegisterBCP1Label = new java.awt.Label();
        cxRegisterBCP1Label = new java.awt.Label();
        dxRegisterBCP1Label = new java.awt.Label();
        ESStateBCP1Label = new java.awt.Label();
        initTimeBCP1Label = new java.awt.Label();
        jSeparator1 = new javax.swing.JSeparator();
        stackBCP1ScrollPane = new javax.swing.JScrollPane();
        stackBCP1 = new javax.swing.JTable();
        idProcessBCP1Value = new java.awt.Label();
        stateBCP1Value = new java.awt.Label();
        pcRegisterBCP1Value = new java.awt.Label();
        acRegisterBCP1Value = new java.awt.Label();
        axRegisterBCP1Value = new java.awt.Label();
        bxRegisterBCP1Value = new java.awt.Label();
        cxRegisterBCP1Value = new java.awt.Label();
        dxRegisterBCP1Value = new java.awt.Label();
        ESStateBCP1Value = new java.awt.Label();
        initTimeBCP1Value = new java.awt.Label();
        instructionTimeBCP1Label = new java.awt.Label();
        instructionTimeBCP1Value = new java.awt.Label();
        BCP2ScrollPane = new javax.swing.JScrollPane();
        BCP2Panel = new javax.swing.JPanel();
        BCPprocessCore2Label = new java.awt.Label();
        jSeparator2 = new javax.swing.JSeparator();
        pcRegisterBCP2Label = new java.awt.Label();
        axRegisterBCP2Label = new java.awt.Label();
        dxRegisterBCP2Label = new java.awt.Label();
        idProcessBCP2Label = new java.awt.Label();
        stateBCP2Label = new java.awt.Label();
        cxRegisterBCP2Label = new java.awt.Label();
        acRegisterBCP2Label = new java.awt.Label();
        bxRegisterBCP2Label = new java.awt.Label();
        ESStateBCP2Label = new java.awt.Label();
        initTimeBCP2Label = new java.awt.Label();
        stackBCP2ScrollPane = new javax.swing.JScrollPane();
        stackBCP2 = new javax.swing.JTable();
        cxRegisterBCP1Value1 = new java.awt.Label();
        idProcessBCP1Value1 = new java.awt.Label();
        stateBCP1Value1 = new java.awt.Label();
        bxRegisterBCP1Value1 = new java.awt.Label();
        pcRegisterBCP1Value1 = new java.awt.Label();
        axRegisterBCP1Value1 = new java.awt.Label();
        acRegisterBCP1Value1 = new java.awt.Label();
        dxRegisterBCP1Value1 = new java.awt.Label();
        ESStateBCP1Value1 = new java.awt.Label();
        initTimeBCP1Value1 = new java.awt.Label();
        instructionTimeBCP2Label = new java.awt.Label();
        instructionTimeBCP2Value = new java.awt.Label();
        jPanel2 = new javax.swing.JPanel();
        cpuTimeLabel = new java.awt.Label();
        cpuTimeValue = new java.awt.Label();
        panelStatistics = new keeptoo.KGradientPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MiniPC OS");
        setMaximumSize(new java.awt.Dimension(1365, 735));
        setMinimumSize(new java.awt.Dimension(1365, 735));

        mainContainerPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainContainerPanel.setkEndColor(new java.awt.Color(255, 255, 255));
        mainContainerPanel.setkGradientFocus(0);
        mainContainerPanel.setkStartColor(new java.awt.Color(255, 255, 255));

        menuContainer.setBackground(new java.awt.Color(90, 129, 158));
        menuContainer.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        loadProgramsButtonTab.setBackground(new java.awt.Color(90, 129, 158));
        loadProgramsButtonTab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/upload.png"))); // NOI18N
        loadProgramsButtonTab.setText("Carga de programas");
        loadProgramsButtonTab.setActionCommand("loadPrograms");
        loadProgramsButtonTab.setBorderPainted(false);
        loadProgramsButtonTab.setColorHover(new java.awt.Color(108, 194, 189));
        loadProgramsButtonTab.setFocusPainted(false);
        loadProgramsButtonTab.setFocusable(false);
        loadProgramsButtonTab.setFont(new java.awt.Font("Bahnschrift", 1, 15)); // NOI18N
        loadProgramsButtonTab.setName("loadProgramsButtonTab"); // NOI18N
        loadProgramsButtonTab.setSelected(true);

        ExecuteButtonTab.setBackground(new java.awt.Color(90, 129, 158));
        ExecuteButtonTab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/execute.png"))); // NOI18N
        ExecuteButtonTab.setText("Ejecución                ");
        ExecuteButtonTab.setActionCommand("openExecution");
        ExecuteButtonTab.setBorderPainted(false);
        ExecuteButtonTab.setColorHover(new java.awt.Color(108, 194, 189));
        ExecuteButtonTab.setEnabled(false);
        ExecuteButtonTab.setFocusPainted(false);
        ExecuteButtonTab.setFocusable(false);
        ExecuteButtonTab.setFont(new java.awt.Font("Bahnschrift", 1, 15)); // NOI18N
        ExecuteButtonTab.setName("ExecuteButtonTab"); // NOI18N
        ExecuteButtonTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExecuteButtonTabActionPerformed(evt);
            }
        });

        StatisticsButtonTab.setBackground(new java.awt.Color(90, 129, 158));
        StatisticsButtonTab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/statistics.png"))); // NOI18N
        StatisticsButtonTab.setText("Estadísticas            ");
        StatisticsButtonTab.setActionCommand("openStatistics");
        StatisticsButtonTab.setBorderPainted(false);
        StatisticsButtonTab.setColorHover(new java.awt.Color(108, 194, 189));
        StatisticsButtonTab.setEnabled(false);
        StatisticsButtonTab.setFocusPainted(false);
        StatisticsButtonTab.setFocusable(false);
        StatisticsButtonTab.setFont(new java.awt.Font("Bahnschrift", 1, 15)); // NOI18N
        StatisticsButtonTab.setName("StatisticsButtonTab"); // NOI18N

        myMiniPCIcon.setImagen(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/my-computer-icon.png"))); // NOI18N

        javax.swing.GroupLayout myMiniPCIconLayout = new javax.swing.GroupLayout(myMiniPCIcon);
        myMiniPCIcon.setLayout(myMiniPCIconLayout);
        myMiniPCIconLayout.setHorizontalGroup(
            myMiniPCIconLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        myMiniPCIconLayout.setVerticalGroup(
            myMiniPCIconLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout menuContainerLayout = new javax.swing.GroupLayout(menuContainer);
        menuContainer.setLayout(menuContainerLayout);
        menuContainerLayout.setHorizontalGroup(
            menuContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loadProgramsButtonTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ExecuteButtonTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(StatisticsButtonTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuContainerLayout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(myMiniPCIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        menuContainerLayout.setVerticalGroup(
            menuContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuContainerLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(myMiniPCIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(loadProgramsButtonTab, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ExecuteButtonTab, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(StatisticsButtonTab, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        loadProgramsButtonTab.getAccessibleContext().setAccessibleName("loadProgramsButtonTab");
        ExecuteButtonTab.getAccessibleContext().setAccessibleName("ExecuteButtonTab");
        ExecuteButtonTab.getAccessibleContext().setAccessibleDescription("");
        StatisticsButtonTab.getAccessibleContext().setAccessibleName("StatisticsButtonTab");

        sliderPanelContainer.setBackground(new java.awt.Color(255, 255, 255));
        sliderPanelContainer.setName("sliderPanelContainer"); // NOI18N

        panelLoadPrograms.setkEndColor(new java.awt.Color(255, 193, 167));
        panelLoadPrograms.setkGradientFocus(800);
        panelLoadPrograms.setkStartColor(new java.awt.Color(108, 194, 189));
        panelLoadPrograms.setName("panelLoadPrograms"); // NOI18N

        loadProgramsHeader.setBackground(new java.awt.Color(90, 129, 158));
        loadProgramsHeader.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        openFilesButton.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        openFilesButton.setForeground(new java.awt.Color(255, 255, 255));
        openFilesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/open_folder.png"))); // NOI18N
        openFilesButton.setText("Abrir archivos");
        openFilesButton.setActionCommand("openFiles");
        openFilesButton.setBorderPainted(false);
        openFilesButton.setContentAreaFilled(false);
        openFilesButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        openFilesButton.setFocusPainted(false);
        openFilesButton.setFocusable(false);
        openFilesButton.setName("openFilesButton"); // NOI18N

        javax.swing.GroupLayout loadProgramsHeaderLayout = new javax.swing.GroupLayout(loadProgramsHeader);
        loadProgramsHeader.setLayout(loadProgramsHeaderLayout);
        loadProgramsHeaderLayout.setHorizontalGroup(
            loadProgramsHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadProgramsHeaderLayout.createSequentialGroup()
                .addComponent(openFilesButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        loadProgramsHeaderLayout.setVerticalGroup(
            loadProgramsHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(openFilesButton)
        );

        openFilesButton.getAccessibleContext().setAccessibleName("openFilesButton");

        mainMemoryLabel.setFont(new java.awt.Font("Bodoni MT", 1, 20)); // NOI18N
        mainMemoryLabel.setText("Memoria Principal");

        SecondaryMemoryLabel.setFont(new java.awt.Font("Bodoni MT", 1, 20)); // NOI18N
        SecondaryMemoryLabel.setText("Memoria Secundaria");

        mainMemoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Posición", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mainMemoryTable.setRowHeight(18);
        mainMemoryTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        mainMemoryScrollPane.setViewportView(mainMemoryTable);
        mainMemoryTable.getColumnModel().getColumn(0).setPreferredWidth(2);
        mainMemoryTable.getColumnModel().getColumn(1).setPreferredWidth(130);

        SecondaryMemoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Posición", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SecondaryMemoryTable.setRowHeight(18);
        SecondaryMemoryTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        SecondaryMemoryScrollPane1.setViewportView(SecondaryMemoryTable);
        SecondaryMemoryTable.getColumnModel().getColumn(0).setPreferredWidth(2);
        SecondaryMemoryTable.getColumnModel().getColumn(1).setPreferredWidth(130);

        loadedFilesLabel.setFont(new java.awt.Font("Bodoni MT", 1, 20)); // NOI18N
        loadedFilesLabel.setText("Archivos cargados");

        loadedFilesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Color", "Nombre del programa", "Estado actual"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        loadedFilesTable.setRowHeight(18);
        loadedFilesScrollPane.setViewportView(loadedFilesTable);
        loadedFilesTable.getColumnModel().getColumn(0).setPreferredWidth(1);
        loadedFilesTable.getColumnModel().getColumn(1).setPreferredWidth(130);
        loadedFilesTable.getColumnModel().getColumn(2).setPreferredWidth(150);

        saveProgramsButton.setBackground(new java.awt.Color(208, 236, 240));
        saveProgramsButton.setFont(new java.awt.Font("Bahnschrift", 1, 15)); // NOI18N
        saveProgramsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/arrow up.png"))); // NOI18N
        saveProgramsButton.setText("Cargar programas \nen memoria");
        saveProgramsButton.setActionCommand("loadProgramsIntoMemory");
        saveProgramsButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        saveProgramsButton.setContentAreaFilled(false);
        saveProgramsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveProgramsButton.setEnabled(false);
        saveProgramsButton.setFocusPainted(false);
        saveProgramsButton.setFocusable(false);
        saveProgramsButton.setMargin(new java.awt.Insets(4, 14, 4, 14));

        javax.swing.GroupLayout panelLoadProgramsLayout = new javax.swing.GroupLayout(panelLoadPrograms);
        panelLoadPrograms.setLayout(panelLoadProgramsLayout);
        panelLoadProgramsLayout.setHorizontalGroup(
            panelLoadProgramsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loadProgramsHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelLoadProgramsLayout.createSequentialGroup()
                .addGroup(panelLoadProgramsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLoadProgramsLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(mainMemoryLabel))
                    .addGroup(panelLoadProgramsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mainMemoryScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(panelLoadProgramsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLoadProgramsLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(SecondaryMemoryScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLoadProgramsLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(SecondaryMemoryLabel)))
                .addGroup(panelLoadProgramsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLoadProgramsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 184, Short.MAX_VALUE)
                        .addComponent(loadedFilesLabel)
                        .addGap(125, 125, 125))
                    .addGroup(panelLoadProgramsLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(loadedFilesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLoadProgramsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveProgramsButton)
                .addGap(50, 50, 50))
        );
        panelLoadProgramsLayout.setVerticalGroup(
            panelLoadProgramsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLoadProgramsLayout.createSequentialGroup()
                .addComponent(loadProgramsHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(panelLoadProgramsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mainMemoryLabel)
                    .addComponent(SecondaryMemoryLabel)
                    .addComponent(loadedFilesLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelLoadProgramsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mainMemoryScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                    .addComponent(SecondaryMemoryScrollPane1)
                    .addComponent(loadedFilesScrollPane))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(saveProgramsButton)
                .addGap(38, 38, 38))
        );

        sliderPanelContainer.add(panelLoadPrograms, "card2");
        panelLoadPrograms.getAccessibleContext().setAccessibleName("");

        panelExecute.setkEndColor(new java.awt.Color(108, 194, 189));
        panelExecute.setkGradientFocus(800);
        panelExecute.setkStartColor(new java.awt.Color(255, 193, 167));
        panelExecute.setName("panelExecute"); // NOI18N

        processesContainer.setBackground(new java.awt.Color(255, 193, 167));
        processesContainer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        processesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Color", "ID", "Proceso", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        processesTable.setToolTipText("");
        processesTable.setFocusable(false);
        processesTable.setRowHeight(18);
        processesTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        ProcessesScrollPane.setViewportView(processesTable);
        processesTable.getColumnModel().getColumn(0).setPreferredWidth(1);
        processesTable.getColumnModel().getColumn(1).setPreferredWidth(1);
        processesTable.getColumnModel().getColumn(2).setPreferredWidth(130);
        processesTable.getColumnModel().getColumn(3).setPreferredWidth(130);

        javax.swing.GroupLayout processesContainerLayout = new javax.swing.GroupLayout(processesContainer);
        processesContainer.setLayout(processesContainerLayout);
        processesContainerLayout.setHorizontalGroup(
            processesContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(processesContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProcessesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
                .addContainerGap())
        );
        processesContainerLayout.setVerticalGroup(
            processesContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(processesContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProcessesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        startButton.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        startButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/start.png"))); // NOI18N
        startButton.setText("Iniciar");
        startButton.setActionCommand("startExecution");
        startButton.setBorder(null);
        startButton.setBorderPainted(false);
        startButton.setContentAreaFilled(false);
        startButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        startButton.setFocusPainted(false);
        startButton.setFocusable(false);

        nextButton.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        nextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/next.png"))); // NOI18N
        nextButton.setText("Siguiente");
        nextButton.setActionCommand("nextExecution");
        nextButton.setBorder(null);
        nextButton.setBorderPainted(false);
        nextButton.setContentAreaFilled(false);
        nextButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nextButton.setEnabled(false);
        nextButton.setFocusPainted(false);
        nextButton.setFocusable(false);

        screenScrollPane.setBackground(new java.awt.Color(208, 236, 240));
        screenScrollPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        screenScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        screenIOPanel.setBackground(new java.awt.Color(208, 236, 240));

        javax.swing.GroupLayout screenIOPanelLayout = new javax.swing.GroupLayout(screenIOPanel);
        screenIOPanel.setLayout(screenIOPanelLayout);
        screenIOPanelLayout.setHorizontalGroup(
            screenIOPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 477, Short.MAX_VALUE)
        );
        screenIOPanelLayout.setVerticalGroup(
            screenIOPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 145, Short.MAX_VALUE)
        );

        screenScrollPane.setViewportView(screenIOPanel);

        keyboardScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        keyboard.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        keyboard.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        keyboard.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        keyboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyboardActionPerformed(evt);
            }
        });
        keyboardScrollPane.setViewportView(keyboard);

        core1TabbedPane.setFocusable(false);

        core1Panel.setBackground(new java.awt.Color(251, 236, 204));

        processCore1Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        processCore1Label.setText("ID Proceso:");

        IRRegisterCore1Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        IRRegisterCore1Label.setText("IR:");

        IRRegisterCore1Value.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        IRRegisterCore1Value.setText("-");

        processCore1IDValue.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        processCore1IDValue.setText("-");

        javax.swing.GroupLayout core1PanelLayout = new javax.swing.GroupLayout(core1Panel);
        core1Panel.setLayout(core1PanelLayout);
        core1PanelLayout.setHorizontalGroup(
            core1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(core1PanelLayout.createSequentialGroup()
                .addGroup(core1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(core1PanelLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(IRRegisterCore1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IRRegisterCore1Value, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE))
                    .addGroup(core1PanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(processCore1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(processCore1IDValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        core1PanelLayout.setVerticalGroup(
            core1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(core1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(core1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(processCore1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(processCore1IDValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(core1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IRRegisterCore1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IRRegisterCore1Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        core1TabbedPane.addTab("Núcleo 1", core1Panel);

        core2TabbedPane.setFocusable(false);

        core2Panel.setBackground(new java.awt.Color(251, 236, 204));

        processCore2Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        processCore2Label.setText("ID Proceso:");

        IRRegisterCore2Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        IRRegisterCore2Label.setText("IR:");

        processCore2IDValue.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        processCore2IDValue.setText("-");

        IRRegisterCore2Value.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        IRRegisterCore2Value.setText("-");

        javax.swing.GroupLayout core2PanelLayout = new javax.swing.GroupLayout(core2Panel);
        core2Panel.setLayout(core2PanelLayout);
        core2PanelLayout.setHorizontalGroup(
            core2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(core2PanelLayout.createSequentialGroup()
                .addGroup(core2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(core2PanelLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(IRRegisterCore2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IRRegisterCore2Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(core2PanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(processCore2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(processCore2IDValue, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)))
                .addContainerGap())
        );
        core2PanelLayout.setVerticalGroup(
            core2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(core2PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(core2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(processCore2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(processCore2IDValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(core2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IRRegisterCore2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IRRegisterCore2Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        core2TabbedPane.addTab("Núcleo 2", core2Panel);

        BCP1ScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelBCP1.setBackground(new java.awt.Color(251, 236, 204));

        idProcessBCP1Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        idProcessBCP1Label.setText("ID Proceso:");

        BCPprocessCore1Label.setAlignment(java.awt.Label.CENTER);
        BCPprocessCore1Label.setBackground(new java.awt.Color(255, 255, 255));
        BCPprocessCore1Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        BCPprocessCore1Label.setText("BCP Proceso Núcleo 1");

        stateBCP1Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        stateBCP1Label.setText("Estado:");

        pcRegisterBCP1Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        pcRegisterBCP1Label.setText("PC:");

        acRegisterBCP1Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        acRegisterBCP1Label.setText("AC:");

        axRegisterBCP1Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        axRegisterBCP1Label.setText("AX:");

        bxRegisterBCP1Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        bxRegisterBCP1Label.setText("BX:");

        cxRegisterBCP1Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        cxRegisterBCP1Label.setText("CX:");

        dxRegisterBCP1Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        dxRegisterBCP1Label.setText("DX:");

        ESStateBCP1Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        ESStateBCP1Label.setText("Estado de E/S:");

        initTimeBCP1Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        initTimeBCP1Label.setText("Tiempo inicio:");

        stackBCP1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Pila"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        stackBCP1.setRowHeight(30);
        stackBCP1.setSelectionBackground(new java.awt.Color(255, 255, 255));
        stackBCP1ScrollPane.setViewportView(stackBCP1);

        idProcessBCP1Value.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        idProcessBCP1Value.setText("-");

        stateBCP1Value.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        stateBCP1Value.setText("-");

        pcRegisterBCP1Value.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        pcRegisterBCP1Value.setText("-");

        acRegisterBCP1Value.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        acRegisterBCP1Value.setText("-");

        axRegisterBCP1Value.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        axRegisterBCP1Value.setText("-");

        bxRegisterBCP1Value.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        bxRegisterBCP1Value.setText("-");

        cxRegisterBCP1Value.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        cxRegisterBCP1Value.setText("-");

        dxRegisterBCP1Value.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        dxRegisterBCP1Value.setText("-");

        ESStateBCP1Value.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        ESStateBCP1Value.setText("-");

        initTimeBCP1Value.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        initTimeBCP1Value.setText("-");

        instructionTimeBCP1Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        instructionTimeBCP1Label.setText("Tiempo instrucción:");

        instructionTimeBCP1Value.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        instructionTimeBCP1Value.setText("-");

        javax.swing.GroupLayout panelBCP1Layout = new javax.swing.GroupLayout(panelBCP1);
        panelBCP1.setLayout(panelBCP1Layout);
        panelBCP1Layout.setHorizontalGroup(
            panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(BCPprocessCore1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelBCP1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelBCP1Layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addComponent(dxRegisterBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cxRegisterBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bxRegisterBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(axRegisterBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acRegisterBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pcRegisterBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(idProcessBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelBCP1Layout.createSequentialGroup()
                        .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pcRegisterBCP1Value, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(acRegisterBCP1Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(axRegisterBCP1Value, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bxRegisterBCP1Value, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cxRegisterBCP1Value, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dxRegisterBCP1Value, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBCP1Layout.createSequentialGroup()
                                .addComponent(stackBCP1ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(110, 110, 110))
                            .addGroup(panelBCP1Layout.createSequentialGroup()
                                .addComponent(instructionTimeBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(instructionTimeBCP1Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())))
                    .addGroup(panelBCP1Layout.createSequentialGroup()
                        .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idProcessBCP1Value, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                            .addComponent(stateBCP1Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBCP1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(initTimeBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(initTimeBCP1Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panelBCP1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ESStateBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(ESStateBCP1Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        panelBCP1Layout.setVerticalGroup(
            panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBCP1Layout.createSequentialGroup()
                .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelBCP1Layout.createSequentialGroup()
                        .addComponent(BCPprocessCore1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(idProcessBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(idProcessBCP1Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ESStateBCP1Value, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ESStateBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stateBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(initTimeBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateBCP1Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(initTimeBCP1Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBCP1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelBCP1Layout.createSequentialGroup()
                                .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panelBCP1Layout.createSequentialGroup()
                                        .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(panelBCP1Layout.createSequentialGroup()
                                                .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(panelBCP1Layout.createSequentialGroup()
                                                        .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(pcRegisterBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(pcRegisterBCP1Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(instructionTimeBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(instructionTimeBCP1Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(17, 17, 17)
                                                        .addComponent(acRegisterBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(acRegisterBCP1Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(axRegisterBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(axRegisterBCP1Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bxRegisterBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(bxRegisterBCP1Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cxRegisterBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cxRegisterBCP1Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelBCP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelBCP1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dxRegisterBCP1Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBCP1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dxRegisterBCP1Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBCP1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addComponent(stackBCP1ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))))
        );

        BCP1ScrollPane.setViewportView(panelBCP1);

        BCP2Panel.setBackground(new java.awt.Color(251, 236, 204));

        BCPprocessCore2Label.setAlignment(java.awt.Label.CENTER);
        BCPprocessCore2Label.setBackground(new java.awt.Color(255, 255, 255));
        BCPprocessCore2Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        BCPprocessCore2Label.setText("BCP Proceso Núcleo 2");

        pcRegisterBCP2Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        pcRegisterBCP2Label.setText("PC:");

        axRegisterBCP2Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        axRegisterBCP2Label.setText("AX:");

        dxRegisterBCP2Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        dxRegisterBCP2Label.setText("DX:");

        idProcessBCP2Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        idProcessBCP2Label.setText("ID Proceso:");

        stateBCP2Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        stateBCP2Label.setText("Estado:");

        cxRegisterBCP2Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        cxRegisterBCP2Label.setText("CX:");

        acRegisterBCP2Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        acRegisterBCP2Label.setText("AC:");

        bxRegisterBCP2Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        bxRegisterBCP2Label.setText("BX:");

        ESStateBCP2Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        ESStateBCP2Label.setText("Estado de E/S:");

        initTimeBCP2Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        initTimeBCP2Label.setText("Tiempo inicio:");

        stackBCP2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Pila"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        stackBCP2.setRowHeight(30);
        stackBCP2.setSelectionBackground(new java.awt.Color(255, 255, 255));
        stackBCP2ScrollPane.setViewportView(stackBCP2);

        cxRegisterBCP1Value1.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        cxRegisterBCP1Value1.setText("-");

        idProcessBCP1Value1.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        idProcessBCP1Value1.setText("-");

        stateBCP1Value1.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        stateBCP1Value1.setText("-");

        bxRegisterBCP1Value1.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        bxRegisterBCP1Value1.setText("-");

        pcRegisterBCP1Value1.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        pcRegisterBCP1Value1.setText("-");

        axRegisterBCP1Value1.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        axRegisterBCP1Value1.setText("-");

        acRegisterBCP1Value1.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        acRegisterBCP1Value1.setText("-");

        dxRegisterBCP1Value1.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        dxRegisterBCP1Value1.setText("-");

        ESStateBCP1Value1.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        ESStateBCP1Value1.setText("-");

        initTimeBCP1Value1.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        initTimeBCP1Value1.setText("-");

        instructionTimeBCP2Label.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        instructionTimeBCP2Label.setText("Tiempo instrucción:");

        instructionTimeBCP2Value.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        instructionTimeBCP2Value.setText("-");

        javax.swing.GroupLayout BCP2PanelLayout = new javax.swing.GroupLayout(BCP2Panel);
        BCP2Panel.setLayout(BCP2PanelLayout);
        BCP2PanelLayout.setHorizontalGroup(
            BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addComponent(BCPprocessCore2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(BCP2PanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(acRegisterBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pcRegisterBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dxRegisterBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cxRegisterBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bxRegisterBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(axRegisterBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(idProcessBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pcRegisterBCP1Value1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cxRegisterBCP1Value1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dxRegisterBCP1Value1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BCP2PanelLayout.createSequentialGroup()
                        .addGroup(BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(acRegisterBCP1Value1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(axRegisterBCP1Value1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bxRegisterBCP1Value1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(2, 2, 2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(idProcessBCP1Value1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(stateBCP1Value1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BCP2PanelLayout.createSequentialGroup()
                        .addGroup(BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BCP2PanelLayout.createSequentialGroup()
                                .addComponent(stackBCP2ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(111, 111, 111))
                            .addGroup(BCP2PanelLayout.createSequentialGroup()
                                .addGroup(BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ESStateBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(initTimeBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(initTimeBCP1Value1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ESStateBCP1Value1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(12, 12, 12))
                    .addGroup(BCP2PanelLayout.createSequentialGroup()
                        .addComponent(instructionTimeBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(instructionTimeBCP2Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        BCP2PanelLayout.setVerticalGroup(
            BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BCP2PanelLayout.createSequentialGroup()
                .addComponent(BCPprocessCore2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BCP2PanelLayout.createSequentialGroup()
                        .addGroup(BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BCP2PanelLayout.createSequentialGroup()
                                .addComponent(ESStateBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(initTimeBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BCP2PanelLayout.createSequentialGroup()
                                .addComponent(ESStateBCP1Value1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(initTimeBCP1Value1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(stackBCP2ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BCP2PanelLayout.createSequentialGroup()
                        .addGroup(BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(BCP2PanelLayout.createSequentialGroup()
                                .addComponent(idProcessBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stateBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(pcRegisterBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(acRegisterBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BCP2PanelLayout.createSequentialGroup()
                                .addComponent(idProcessBCP1Value1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stateBCP1Value1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(instructionTimeBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(instructionTimeBCP2Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(BCP2PanelLayout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(pcRegisterBCP1Value1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(acRegisterBCP1Value1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(axRegisterBCP2Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(axRegisterBCP1Value1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bxRegisterBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bxRegisterBCP1Value1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BCP2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BCP2PanelLayout.createSequentialGroup()
                                .addComponent(cxRegisterBCP1Value1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dxRegisterBCP1Value1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BCP2PanelLayout.createSequentialGroup()
                                .addComponent(cxRegisterBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dxRegisterBCP2Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(82, 82, 82))))
        );

        BCP2ScrollPane.setViewportView(BCP2Panel);

        jPanel2.setBackground(new java.awt.Color(255, 193, 167));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        cpuTimeLabel.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        cpuTimeLabel.setText("Tiempo de CPU:");

        cpuTimeValue.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        cpuTimeValue.setText("-");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cpuTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cpuTimeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cpuTimeValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpuTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelExecuteLayout = new javax.swing.GroupLayout(panelExecute);
        panelExecute.setLayout(panelExecuteLayout);
        panelExecuteLayout.setHorizontalGroup(
            panelExecuteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExecuteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelExecuteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelExecuteLayout.createSequentialGroup()
                        .addComponent(processesContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelExecuteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelExecuteLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(startButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nextButton))
                            .addGroup(panelExecuteLayout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(71, 71, 71)))
                        .addGap(23, 23, 23))
                    .addGroup(panelExecuteLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(panelExecuteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(screenScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelExecuteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(keyboardScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(BCP1ScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelExecuteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BCP2ScrollPane)
                            .addComponent(core1TabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(core2TabbedPane))
                        .addGap(94, 94, 94))))
        );
        panelExecuteLayout.setVerticalGroup(
            panelExecuteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExecuteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelExecuteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(processesContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelExecuteLayout.createSequentialGroup()
                        .addGroup(panelExecuteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(startButton)
                            .addComponent(nextButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(10, 10, 10)
                .addGroup(panelExecuteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelExecuteLayout.createSequentialGroup()
                        .addComponent(core1TabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(core2TabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelExecuteLayout.createSequentialGroup()
                        .addComponent(screenScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(keyboardScrollPane)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelExecuteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BCP1ScrollPane)
                    .addComponent(BCP2ScrollPane))
                .addContainerGap())
        );

        sliderPanelContainer.add(panelExecute, "card3");
        panelExecute.getAccessibleContext().setAccessibleName("");

        panelStatistics.setkEndColor(new java.awt.Color(108, 194, 189));
        panelStatistics.setkGradientFocus(1400);
        panelStatistics.setkStartColor(new java.awt.Color(255, 193, 167));
        panelStatistics.setName("panelStatistics"); // NOI18N

        javax.swing.GroupLayout panelStatisticsLayout = new javax.swing.GroupLayout(panelStatistics);
        panelStatistics.setLayout(panelStatisticsLayout);
        panelStatisticsLayout.setHorizontalGroup(
            panelStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1109, Short.MAX_VALUE)
        );
        panelStatisticsLayout.setVerticalGroup(
            panelStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 779, Short.MAX_VALUE)
        );

        sliderPanelContainer.add(panelStatistics, "card4");
        panelStatistics.getAccessibleContext().setAccessibleName("panelStatistics");

        javax.swing.GroupLayout mainContainerPanelLayout = new javax.swing.GroupLayout(mainContainerPanel);
        mainContainerPanel.setLayout(mainContainerPanelLayout);
        mainContainerPanelLayout.setHorizontalGroup(
            mainContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainContainerPanelLayout.createSequentialGroup()
                .addComponent(menuContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sliderPanelContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainContainerPanelLayout.setVerticalGroup(
            mainContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sliderPanelContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        sliderPanelContainer.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleName("MiniPC SO");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void keyboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keyboardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_keyboardActionPerformed

    private void ExecuteButtonTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExecuteButtonTabActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExecuteButtonTabActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MiniPC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MiniPC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MiniPC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MiniPC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MiniPC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane BCP1ScrollPane;
    public javax.swing.JPanel BCP2Panel;
    private javax.swing.JScrollPane BCP2ScrollPane;
    private java.awt.Label BCPprocessCore1Label;
    private java.awt.Label BCPprocessCore2Label;
    private java.awt.Label ESStateBCP1Label;
    public java.awt.Label ESStateBCP1Value;
    public java.awt.Label ESStateBCP1Value1;
    private java.awt.Label ESStateBCP2Label;
    public rojerusan.RSButtonIconI ExecuteButtonTab;
    private java.awt.Label IRRegisterCore1Label;
    public java.awt.Label IRRegisterCore1Value;
    private java.awt.Label IRRegisterCore2Label;
    public java.awt.Label IRRegisterCore2Value;
    private javax.swing.JScrollPane ProcessesScrollPane;
    private javax.swing.JLabel SecondaryMemoryLabel;
    private javax.swing.JScrollPane SecondaryMemoryScrollPane1;
    public javax.swing.JTable SecondaryMemoryTable;
    public rojerusan.RSButtonIconI StatisticsButtonTab;
    private java.awt.Label acRegisterBCP1Label;
    public java.awt.Label acRegisterBCP1Value;
    public java.awt.Label acRegisterBCP1Value1;
    private java.awt.Label acRegisterBCP2Label;
    private java.awt.Label axRegisterBCP1Label;
    public java.awt.Label axRegisterBCP1Value;
    public java.awt.Label axRegisterBCP1Value1;
    private java.awt.Label axRegisterBCP2Label;
    private java.awt.Label bxRegisterBCP1Label;
    public java.awt.Label bxRegisterBCP1Value;
    public java.awt.Label bxRegisterBCP1Value1;
    private java.awt.Label bxRegisterBCP2Label;
    public javax.swing.JPanel core1Panel;
    private javax.swing.JTabbedPane core1TabbedPane;
    public javax.swing.JPanel core2Panel;
    private javax.swing.JTabbedPane core2TabbedPane;
    private java.awt.Label cpuTimeLabel;
    public java.awt.Label cpuTimeValue;
    private java.awt.Label cxRegisterBCP1Label;
    public java.awt.Label cxRegisterBCP1Value;
    public java.awt.Label cxRegisterBCP1Value1;
    private java.awt.Label cxRegisterBCP2Label;
    private java.awt.Label dxRegisterBCP1Label;
    public java.awt.Label dxRegisterBCP1Value;
    public java.awt.Label dxRegisterBCP1Value1;
    private java.awt.Label dxRegisterBCP2Label;
    private java.awt.Label idProcessBCP1Label;
    public java.awt.Label idProcessBCP1Value;
    public java.awt.Label idProcessBCP1Value1;
    private java.awt.Label idProcessBCP2Label;
    private java.awt.Label initTimeBCP1Label;
    public java.awt.Label initTimeBCP1Value;
    public java.awt.Label initTimeBCP1Value1;
    private java.awt.Label initTimeBCP2Label;
    private java.awt.Label instructionTimeBCP1Label;
    public java.awt.Label instructionTimeBCP1Value;
    private java.awt.Label instructionTimeBCP2Label;
    public java.awt.Label instructionTimeBCP2Value;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    public javax.swing.JTextField keyboard;
    private javax.swing.JScrollPane keyboardScrollPane;
    public rojerusan.RSButtonIconI loadProgramsButtonTab;
    private javax.swing.JPanel loadProgramsHeader;
    private javax.swing.JLabel loadedFilesLabel;
    private javax.swing.JScrollPane loadedFilesScrollPane;
    public javax.swing.JTable loadedFilesTable;
    private keeptoo.KGradientPanel mainContainerPanel;
    private javax.swing.JLabel mainMemoryLabel;
    public javax.swing.JScrollPane mainMemoryScrollPane;
    public javax.swing.JTable mainMemoryTable;
    private javax.swing.JPanel menuContainer;
    private rojerusan.RSPanelImage myMiniPCIcon;
    public javax.swing.JButton nextButton;
    public javax.swing.JButton openFilesButton;
    public javax.swing.JPanel panelBCP1;
    public keeptoo.KGradientPanel panelExecute;
    public keeptoo.KGradientPanel panelLoadPrograms;
    public keeptoo.KGradientPanel panelStatistics;
    private java.awt.Label pcRegisterBCP1Label;
    public java.awt.Label pcRegisterBCP1Value;
    public java.awt.Label pcRegisterBCP1Value1;
    private java.awt.Label pcRegisterBCP2Label;
    public java.awt.Label processCore1IDValue;
    private java.awt.Label processCore1Label;
    public java.awt.Label processCore2IDValue;
    private java.awt.Label processCore2Label;
    private javax.swing.JPanel processesContainer;
    public javax.swing.JTable processesTable;
    public javax.swing.JButton saveProgramsButton;
    public javax.swing.JPanel screenIOPanel;
    private javax.swing.JScrollPane screenScrollPane;
    public rojerusan.RSPanelsSlider sliderPanelContainer;
    public javax.swing.JTable stackBCP1;
    private javax.swing.JScrollPane stackBCP1ScrollPane;
    public javax.swing.JTable stackBCP2;
    private javax.swing.JScrollPane stackBCP2ScrollPane;
    public javax.swing.JButton startButton;
    private java.awt.Label stateBCP1Label;
    public java.awt.Label stateBCP1Value;
    public java.awt.Label stateBCP1Value1;
    private java.awt.Label stateBCP2Label;
    // End of variables declaration//GEN-END:variables
}
